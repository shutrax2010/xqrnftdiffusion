<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="icon" type="image/x-icon" href="../assets/PhygitalifyQR icon.png">
    <link href="https://fonts.googleapis.com/css2?family=Tilt+Neon&display=swap" rel="stylesheet">
  </head>
  <body id="sign-body">
    <!--<h1><%= title %></h1>
    <p>Welcome to <%= title %></p>-->
    <div id = "slogan">From Screen To Scene</div>
    <button id="sign-button">Connect Wallet</button>

    <script>
      const button = document.getElementById('sign-button');
      const signedInUrl = '/menu'

      button.addEventListener('click', async () => {
        try {
          // Send a GET request to the server with an indication for Xumm payload
          const response = await fetch('/?xummRequest=true');
          const payloadData = await response.json();

          // Check for errors
          if (!response.ok) {
            throw new Error('Failed to create Xumm payload');
          }

          // Access and handle the payload data (e.g., redirect to SignInUrl)
          const SignInUrl = payloadData.created.next?.always;
          if (SignInUrl) {
            
            console.log('Redirecting to Xumm sign-in:', SignInUrl);
            window.open(SignInUrl,'_blank','width=700,height=600');
            const payloadUUID = payloadData.created.uuid;

            const intervalId = setInterval(async () => {
                try {
                  const response = await fetch(`/payload/${payloadUUID}`);
                  const payloadData = await response.json();

                  if (payloadData.status === 'completed' && payloadData.resolved) {
                    clearInterval(intervalId);
                    console.log('Sign-in completed!');
                    window.location.href = signedInUrl;
                  }
                } catch (error) {
                  console.error('Error fetching payload status:', error);
                }
              }, 5000); // Check status every 5 seconds

          } else {
            console.error('Xumm payload missing "next.always" property');
            // Handle case where the property is absent
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });
    </script>
  </body>
</html>
